//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Backup.Services.VDDK {

public class VixDiskLibConnectParams : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal VixDiskLibConnectParams(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(VixDiskLibConnectParams obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~VixDiskLibConnectParams() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VixDiskLibPINVOKE.delete_VixDiskLibConnectParams(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public VixDiskLibCreds creds {
    get {
      global::System.IntPtr cPtr = VixDiskLibPINVOKE.VixDiskLibConnectParams_creds_get(swigCPtr);
      VixDiskLibCreds ret = (cPtr == global::System.IntPtr.Zero) ? null : new VixDiskLibCreds(cPtr, false);
      return ret;
    } 
  }

  public string vmxSpec {
    set {
      VixDiskLibPINVOKE.VixDiskLibConnectParams_vmxSpec_set(swigCPtr, value);
    } 
    get {
      string ret = VixDiskLibPINVOKE.VixDiskLibConnectParams_vmxSpec_get(swigCPtr);
      return ret;
    } 
  }

  public string serverName {
    set {
      VixDiskLibPINVOKE.VixDiskLibConnectParams_serverName_set(swigCPtr, value);
    } 
    get {
      string ret = VixDiskLibPINVOKE.VixDiskLibConnectParams_serverName_get(swigCPtr);
      return ret;
    } 
  }

  public string thumbPrint {
    set {
      VixDiskLibPINVOKE.VixDiskLibConnectParams_thumbPrint_set(swigCPtr, value);
    } 
    get {
      string ret = VixDiskLibPINVOKE.VixDiskLibConnectParams_thumbPrint_get(swigCPtr);
      return ret;
    } 
  }

  public int privateUse {
    set {
      VixDiskLibPINVOKE.VixDiskLibConnectParams_privateUse_set(swigCPtr, value);
    } 
    get {
      int ret = VixDiskLibPINVOKE.VixDiskLibConnectParams_privateUse_get(swigCPtr);
      return ret;
    } 
  }

  public VixDiskLibCredType credType {
    set {
      VixDiskLibPINVOKE.VixDiskLibConnectParams_credType_set(swigCPtr, (int)value);
    } 
    get {
      VixDiskLibCredType ret = (VixDiskLibCredType)VixDiskLibPINVOKE.VixDiskLibConnectParams_credType_get(swigCPtr);
      return ret;
    } 
  }

  public uint port {
    set {
      VixDiskLibPINVOKE.VixDiskLibConnectParams_port_set(swigCPtr, value);
    } 
    get {
      uint ret = VixDiskLibPINVOKE.VixDiskLibConnectParams_port_get(swigCPtr);
      return ret;
    } 
  }

  public uint nfcHostPort {
    set {
      VixDiskLibPINVOKE.VixDiskLibConnectParams_nfcHostPort_set(swigCPtr, value);
    } 
    get {
      uint ret = VixDiskLibPINVOKE.VixDiskLibConnectParams_nfcHostPort_get(swigCPtr);
      return ret;
    } 
  }

  public string vimApiVer {
    set {
      VixDiskLibPINVOKE.VixDiskLibConnectParams_vimApiVer_set(swigCPtr, value);
    } 
    get {
      string ret = VixDiskLibPINVOKE.VixDiskLibConnectParams_vimApiVer_get(swigCPtr);
      return ret;
    } 
  }

  public VixDiskLibConnectParams() : this(VixDiskLibPINVOKE.new_VixDiskLibConnectParams(), true) {
  }

}

}
